# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
#set $left h
#set $down j
#set $up k
#set $right l
# Your preferred terminal emulator
set $term terminator
#for_window [instance="guake"] floating enable
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg #111525 solid_color
#exec "/home/pelegs/scripts/randbg.sh"
output "*" background "/home/pelegs/Pictures/seasons/seasons.jpg" fill

#
# Example configuration:
#
#	output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output DP-1 pos 1600 0 res 1920x1080@60.000000Hz
output eDP-1 pos 0 0 res 1600x900

### i3-alternate tiling
exec --no-startup-id /home/pelegs/Downloads/i3-alternating-layout/alternating_layouts.py

### clipman?
exec wl-paste -t text --watch clipman store
exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json"

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#		   timeout 300 'swaylock -f -c 000000' \
#		   timeout 600 'swaymsg "output * dpms off"' \
#				resume 'swaymsg "output * dpms on"' \
#		   before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
input "DLL0704:01 06CB:76AE Touchpad" {
	left_handed disabled
	tap enabled
	natural_scroll enabled
	dwt enabled
	pointer_accel 0.5 # set mouse sensitivity (between -1 and 1)
}
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

## Keyboard?
input type:keyboard {
	xkb_layout "us,il"
	xkb_options grp:alt_shift_toggle
}

### Key bindings
#
# Basics:
#
	# Start a terminal
	bindsym $mod+Return exec $term

	# Kill focused window
	bindsym $mod+Shift+q kill

	# Start your launcher
	bindsym $mod+d exec $menu

	# Drag floating windows by holding down $mod and left mouse button.
	# Resize them with right mouse button + $mod.
	# Despite the name, also works for non-floating windows.
	# Change normal to inverse to use left mouse button for resizing and right
	# mouse button for dragging.
	floating_modifier $mod normal

	# Reload the configuration file
	bindsym $mod+Shift+r reload

	# Next option in layout indicator
	bindsym $mod+Shift+h exec "/home/pelegs/scripts/layout_adjust.sh"

	# Test for changing background image
	#bindsym $mod+Shift+h exec "/home/pelegs/scripts/randbg.sh"

	# Exit sway (logs you out of your Wayland session)
	bindsym $mod+Shift+e exec swaynag --background CAD1E9 --text 000000 --border 4961B2 --border-bottom 4961B2 --button-background CAD1E9 -t warning -m 'Logout?' -b 'Yes' 'swaymsg exit'
#
# Moving around:
#
bindsym --to-code {
	# Move your focus around
#	 $mod+$left focus left
#	 $mod+$down focus down
#	 $mod+$up focus up
#	 $mod+$right focus right
	# Or use $mod+[up|down|left|right]
	$mod+Left focus left
	$mod+Down focus down
	$mod+Up focus up
	$mod+Right focus right

	# Move the focused window with the same, but add Shift
#	 $mod+Shift+$left move left
#	 $mod+Shift+$down move down
#	 $mod+Shift+$up move up
#	 $mod+Shift+$right move right
	# Ditto, with arrow keys
	$mod+Shift+Left move left
	$mod+Shift+Down move down
	$mod+Shift+Up move up
	$mod+Shift+Right move right
}
#
# Workspaces:
#
	# Switch to workspace
	bindsym $mod+1 workspace 1
	bindsym $mod+2 workspace 2
	bindsym $mod+3 workspace 3
	bindsym $mod+4 workspace 4
	bindsym $mod+5 workspace 5
	bindsym $mod+6 workspace 6
	bindsym $mod+7 workspace 7
	bindsym $mod+8 workspace 8
	bindsym $mod+9 workspace 9
	bindsym $mod+0 workspace 10
	# Move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace 1
	bindsym $mod+Shift+2 move container to workspace 2
	bindsym $mod+Shift+3 move container to workspace 3
	bindsym $mod+Shift+4 move container to workspace 4
	bindsym $mod+Shift+5 move container to workspace 5
	bindsym $mod+Shift+6 move container to workspace 6
	bindsym $mod+Shift+7 move container to workspace 7
	bindsym $mod+Shift+8 move container to workspace 8
	bindsym $mod+Shift+9 move container to workspace 9
	bindsym $mod+Shift+0 move container to workspace 10
	# Note: workspaces can have any name you want, not just numbers.
	# We just use 1-10 as the default.
#
# Layout stuff:
#
	# You can "split" the current object of your focus with
	# $mod+b or $mod+v, for horizontal and vertical splits
	# respectively.
	bindsym $mod+h splith
	bindsym $mod+v splitv

	# Switch the current container between different layout styles
	bindsym $mod+s layout stacking
	bindsym $mod+w layout tabbed
	bindsym $mod+e layout toggle split

	# Make the current focus fullscreen
	bindsym $mod+f fullscreen

	# Toggle the current focus between tiling and floating mode
	bindsym $mod+Shift+space floating toggle

	# Swap focus between the tiling area and the floating area
	bindsym $mod+space focus mode_toggle

	# Move focus to the parent container
	bindsym $mod+a focus parent
#
# Scratchpad:
#
	# Sway has a "scratchpad", which is a bag of holding for windows.
	# You can send windows there and get them back later.

	# Move the currently focused window to the scratchpad
	bindsym $mod+Shift+minus move scratchpad

	# Show the next scratchpad window or hide the focused scratchpad window.
	# If there are multiple scratchpad windows, this command cycles through them.
	bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
	# left will shrink the containers width
	# right will grow the containers width
	# up will shrink the containers height
	# down will grow the containers height
#	 bindsym $left resize shrink width 10px
#	 bindsym $down resize grow height 10px
#	 bindsym $up resize shrink height 10px
#	 bindsym $right resize grow width 10px

	# Ditto, with arrow keys
	bindsym Left resize shrink width 10px
	bindsym Down resize grow height 10px
	bindsym Up resize shrink height 10px
	bindsym Right resize grow width 10px

	# Return to default mode
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Lock
bindsym $mod+l exec /home/$USER/scripts/scrlock.sh

# Firefox
bindsym $mod+g exec firefox
bindsym $mod+Shift+g exec "firefox --private-window"

# Keyboard layout
bindsym $mod+x exec setxkbmap de
bindsym $mod+Shift+x exec "setxkbmap -model pc105 -layout us,il -variant qwerty -option grp:alt_shift_toggle"

# Passwrod generator
bindsym $mod+p exec "cat /dev/urandom | tr -dc '0-9a-zA-Z!@#$%^&*()_+-=' | head -c32 | wl-copy"
bindsym $mod+Shift+p exec "cat /dev/urandom | tr -dc '0-9a-zA-Z!@#$%^&*()_+-=' | head -c32 | wl-copy"

# Take screenshot
bindsym $mod+Shift+s exec "grim /home/$USER/Pictures/screenshots/screenshot_$(date +%Y%m%d%H%M%S).png"

# Shrug emoji to clipboard
bindsym $mod++u exec wl-copy "¯\_(ツ)_/¯"
bindsym $mod+Shift+u exec wl-copy "¯/_(ツ)_\¯"

# Change screen brightness
bindsym XF86MonBrightnessDown exec "/home/$USER/scripts/scr_brightness.py -10"
bindsym XF86MonBrightnessUp   exec "/home/$USER/scripts/scr_brightness.py +10"

# Volume
bindsym XF86AudioLowerVolume exec "amixer set Master 5%-"
bindsym XF86AudioRaiseVolume exec "amixer set Master 5%+"
bindsym XF86AudioMute exec "amixer set Master toggle"

# Daaamnn
bindsym $mod+F8 exec "mplayer /home/pelegs/sounds/daaaamn.mp3"

# It's a trap!
bindsym $mod+F6 exec "mplayer /home/pelegs/sounds/itsatrap.mp3"

# Laugh track
bindsym $mod+F5 exec "/home/pelegs/scripts/laugh.sh"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#	position bottom
#
#	font monospace condensed 9
#
#	# When the status_command prints a new line to stdout, swaybar updates.
#	# The default just shows the current date and time.
#	status_command py3status
#
#	colors {
#		statusline #ffffff
#		background #121212
#		inactive_workspace #000000ff #000000ff #aaaaaaff
#	}
#}

bar {
    font pango:DejaVu Sans Mono, FontAwesome 11
    position bottom
    status_command i3status-rs /home/pelegs/.config/i3status-rust/config.toml
}

#bar {
#    swaybar_command waybar
#}

include /etc/sway/config.d/*
